name: 'action-aws-ecr-repos'
description: Create AWS ECR repos
inputs:
  names:
    description: 'List of AWS ECR repos to create'
    required: true
  trusted_accounts:
    description: 'trusted accounts that are allowed to pull images'
    required: true
  image_tag_mutability:
    description: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#argument-reference'
    required: false
    default: 'MUTABLE'
  encryption_type:
    description: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#argument-reference'
    required: false
    default: 'AES256'
  scan_on_push:
    description: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#argument-reference'
    required: false
    type: boolean
    default: true
  force_delete:
    description: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#argument-reference'
    required: false
    type: boolean
    default: false
  image_limit:
    description: 'If not null, a default lifecycle policy will be deployed to prune repository images to this limit'
    required: false
    default: '8000'

runs:
  using: "composite"
  steps:
    - run: |
        export names="${{ inputs.names }}"
        terraform init
        for name in "${names[@]}"; do
          echo Trying to import $name
          terraform import 'module.this["$name"].aws_ecr_repository.this' $name
        done
        terraform apply -auto-approve
      working-directory: ${{ github.action_path }}
      shell: bash
      env:
        TF_VAR_names: ${{ inputs.names }}
        TF_VAR_trusted_accounts: ${{ inputs.trusted_accounts }}
        TF_VAR_image_tag_mutability: ${{ inputs.image_tag_mutability }}
        TF_VAR_encryption_type: ${{ inputs.encryption_type }}
        TF_VAR_scan_on_push: ${{ inputs.scan_on_push }}
        TF_VAR_force_delete: ${{ inputs.force_delete }}
        TF_VAR_image_limit: ${{ inputs.image_limit }}
